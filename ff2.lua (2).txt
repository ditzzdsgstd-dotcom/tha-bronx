-- Chunk: nil

if getexecutorname and (getexecutorname() ~= "Xeno" and getexecutorname() ~= "Solara" and getexecutorname() ~= "JJSploit") and game.PlaceId == 8204899140 then local ReplicatedStorage = game:GetService("ReplicatedStorage") local Handshake = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CharacterSoundEvent") local Players = game:GetService("Players") local LocalPlayer = Players.LocalPlayer local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait() local Hooks = {} local Step, CountIncrement = 0, 0 Hooks.debug_info = hookfunction(debug.info, function(Level, Stuff) if Level == 2 and Stuff == "s" then return "LocalScript" end return Hooks.debug_info(Level, Stuff) end) local function hookChildAdded(folder) folder.ChildAdded:Connect(function(child) local name = child.Name if name:sub(1, 5) == "Catch" or name:sub(1, 6) == "BlockP" then pcall(function() local sizeConn sizeConn = child:GetPropertyChangedSignal("Size"):Connect(function() if child.Size.Magnitude > 1.55 then sizeConn:Disconnect() end end) end) end end) end for _, folder in pairs(workspace:GetDescendants()) do if folder:IsA("BasePart") then hookChildAdded(folder) end end workspace.DescendantAdded:Connect(function(obj) if obj:IsA("BasePart") then hookChildAdded(obj) end end) for _, v in next, getgc() do if type(v) == "function" then local Script = debug.info(v, "s") if string.find(Script, "ReplicatedFirst.LocalScript") then setfenv(v, {}) Step += 1 CountIncrement += 1 end end end for _, v in getgc() do if typeof(v) == "function" and islclosure(v) then if #getprotos(v) == 1 and table.find(getconstants(getproto(v, 1)), 4000002) then hookfunction(v, function() end) Step += 1 CountIncrement += 1 end end end for _, v in next, getgc(true) do if type(v) == "table" and rawlen(v) == 19 and type(rawget(v, 19)) == "userdata" then Hooks.__call = hookfunction(getrawmetatable(v).__call, function(self, ...) local Args = {...} local HandshakeValues = { {660, 759, 863, 751, 771, 866}, {760, 760, 665, 771, 898, 777}, {655, 775, 633, 724, 891, 666} } local function tablesEqual(t1, t2) if #t1 ~= #t2 then return false end for i = 1, #t1 do if t1[i] ~= t2[i] then return false end end return true end local function containsTable(t, list) for _, v in pairs(list) do if tablesEqual(t, v) then return true end end return false end if not containsTable(Args, HandshakeValues) then return end return Hooks.__call(self, ...) end) Step += 1 CountIncrement += 1 end end task.wait() end local blahbibal = { whahsksjsnsnsn = true, bumbumbasakelhbumbum = nil } local repo = "https://raw.githubusercontent.com/deividcomsono/Obsidian/main/" local library = loadstring(game:HttpGet(repo .. "Library.lua"))() local thememanager = loadstring(game:HttpGet(repo .. "addons/ThemeManager.lua"))() local savemanager = loadstring(game:HttpGet(repo .. "addons/SaveManager.lua"))() local options = library.Options local toggles = library.Toggles local window = library:CreateWindow({ Title = "EonHub", Footer = "Eon Always Free", Icon = 100989586278785, NotifySide = "Right", ShowCustomCursor = true, }) local shiiifooionknowtftonamets = { catching = window:AddTab("Catching", "user"), physics = window:AddTab("Physics", "user"), automatics = window:AddTab("Automatics", "user"), throwing = window:AddTab("Throwing", "zap"), kicker = window:AddTab("Kicker", "zap"), visuals = window:AddTab("Visuals", "eye"), misc = window:AddTab("Misc", "misc"), ["ui settings"] = window:AddTab("UI Settings", "settings"), } local ggahshdhdhdh = "pr" local pryards = 0 local bloodclatmibackside = false local players = game:GetService("Players") local userinputservice = game:GetService("UserInputService") local realshit = game:GetService("RunService") local typeshiii = game:GetService("TweenService") local wakspase = game:GetService("Workspace") local cggg = game:GetService("CoreGui") local vim = game:GetService("VirtualInputManager") local contextactionservice = game:GetService("ContextActionService") local player456squidgam = players.LocalPlayer while not player456squidgam do player456squidgam = players.LocalPlayer wait() end local ballpath = false local predictioncolor = Color3.new(1, 1, 1) local trajectorycolor = Color3.new(1, 1, 1) local eventconnection local trajectorybeam = nil local trajectoryattachment0 = nil local trajectoryattachment1 = nil local trajectoryendpart = nil local fatminsksndjd = false local djdnshheilppeisllak = 10 local besmetea = nil local wmbamfatni = nil local beehonfoenemgravefoo = nil local pizztype = "Dime" local ggggggggghswidahbifoo = { ["Dime"] = "Mag", ["Mag"] = "Bullet", ["Bullet"] = "Dime" } local typlead = { ["Dime"] = 5, ["Mag"] = 4, ["Bullet"] = 0.6 } local locked = false local whotheqbalocksontoyuhfeelme = nil local lockbuttonon = false local switchmodebuttonon = false local showui = false local baskelehbambam = { angle = 40, power = 0, direction = Vector3.new(0, 0, 0) } local trajectoryon = false local pullvector = false local pullvectorpower = 1 local pullvectordistance = 5 local pullvectortype = "Velocity" local bigblackbombaclaatballs = {} local antioobon = false local cframespeedon = false local cframespeed = 0.01 local nojpcooldownon = false local qbaimboton = false local autocaptainon = false local autobooston = false local autoboostpower = 1 local njcconnections = {} local autokicker = {Value = true} local autokickerrandom = {Value = false} local autokickerpower = {Value = 93} local autokickeraccuracy = {Value = 93} local autocatchon = false local catchdistance = 10 local magson = false local magsrange = 0 local magsdelayon = false local magsdelay = 0 local showhitboxon = false local hitboxshape = "Sphere" local hitboxcolor = "Green" local hitboxes = {} local jumpoweron = false local jumpboost = 50 local freezetechon = false local freezeduration = 0.1 local freezemode = "On catch" local beforerange = 10 local clicktackleon = false local clicktacklerange = 5 local catchresizeon = false local catchresizerange = 10 local autoguardon = false local sltcted = nil local guardhighlight = nil local dviitit = 5 local antiblokon = false local autorushon = false local autorushpredict = false local autorushdelay = 0.2 local autoangleon = false local customangleon = false local blackmimad = 40 local highlight = Instance.new("Highlight") highlight.FillColor = Color3.fromRGB(0, 255, 0) highlight.OutlineColor = Color3.fromRGB(0, 255, 0) highlight.Parent = cggg local lmgg = 0 local plllldjskd = {} local bbbbbsisjend = 0 local shsnehxniehdksjed = nil local hxkdndbnzehz = nil local ibl = 0 local mmdbdndjxhdidjdkd = Instance.new("ScreenGui") mmdbdndjxhdidjdkd.Name = "Switch" mmdbdndjxhdidjdkd.Parent = cggg mmdbdndjxhdidjdkd.IgnoreGuiInset = true local mdmdmdmememjxakm = Instance.new("Frame") mdmdmdmememjxakm.Name = "Main" mdmdmdmememjxakm.Size = UDim2.new(0, 500, 0, 60) mdmdmdmememjxakm.Position = UDim2.new(0.5, -250, 0.05, 0) mdmdmdmememjxakm.BackgroundTransparency = 1 mdmdmdmememjxakm.BorderSizePixel = 0 mdmdmdmememjxakm.Parent = mmdbdndjxhdidjdkd local bdbsbbxegjdudhdhdhd = Instance.new("UIListLayout") bdbsbbxegjdudhdhdhd.FillDirection = Enum.FillDirection.Horizontal bdbsbbxegjdudhdhdhd.HorizontalAlignment = Enum.HorizontalAlignment.Center bdbsbbxegjdudhdhdhd.VerticalAlignment = Enum.VerticalAlignment.Center bdbsbbxegjdudhdhdhd.Padding = UDim.new(0, 10) bdbsbbxegjdudhdhdhd.Parent = mdmdmdmememjxakm local function LFCc(name, text) local bbsnsnsllpoop = Instance.new("Frame") bbsnsnsllpoop.Name = name bbsnsnsllpoop.Size = UDim2.new(0, 90, 0, 40) bbsnsnsllpoop.BackgroundColor3 = Color3.fromRGB(20, 20, 20) bbsnsnsllpoop.BackgroundTransparency = 0.5 bbsnsnsllpoop.BorderSizePixel = 0 local hshsbvvqgquwuwuwuw = Instance.new("UICorner") hshsbvvqgquwuwuwuw.CornerRadius = UDim.new(0, 8) hshsbvvqgquwuwuwuw.Parent = bbsnsnsllpoop local bblppwjslllnatat = Instance.new("UIStroke") bblppwjslllnatat.Color = Color3.fromRGB(0, 255, 0) bblppwjslllnatat.Thickness = 2 bblppwjslllnatat.Parent = bbsnsnsllpoop local jdndnbskshsbskshsns = Instance.new("TextLabel") jdndnbskshsbskshsns.Size = UDim2.new(1, 0, 0, 20) jdndnbskshsbskshsns.Position = UDim2.new(0, 0, 0, -20) jdndnbskshsbskshsns.BackgroundTransparency = 1 jdndnbskshsbskshsns.Text = name .. ":" jdndnbskshsbskshsns.TextColor3 = Color3.fromRGB(144, 238, 144) jdndnbskshsbskshsns.TextSize = 14 jdndnbskshsbskshsns.Font = Enum.Font.SourceSansBold jdndnbskshsbskshsns.TextXAlignment = Enum.TextXAlignment.Center jdndnbskshsbskshsns.Parent = bbsnsnsllpoop local blahblahblah = Instance.new("TextLabel") blahblahblah.Name = name .. "Label" blahblahblah.Size = UDim2.new(1, 0, 1, 0) blahblahblah.BackgroundTransparency = 1 blahblahblah.Text = text blahblahblah.TextColor3 = Color3.fromRGB(144, 238, 144) blahblahblah.TextSize = 20 blahblahblah.Font = Enum.Font.SourceSansBold blahblahblah.Parent = bbsnsnsllpoop bbsnsnsllpoop.Parent = mdmdmdmememjxakm return blahblahblah end local throwtypelabel = LFCc("Type", "Dime") local powerlabel = LFCc("Power", "0") local targetlabel = LFCc("Player", "None") local airtimelabel = LFCc("Time", "0.00s") local anglelabel = LFCc("Angle", "40") local babsbsbabakbana = LFCc("Interceptable", "No") mdmdmdmememjxakm.Visible = false local shabvsvsvvvavba = Instance.new("Frame") shabvsvsvvvavba.Name = "Lock" shabvsvsvvvavba.Size = UDim2.new(0, 50, 0, 50) shabvsvsvvvavba.Position = UDim2.new(0.95, -50, 0.3, 0) shabvsvsvvvavba.BackgroundColor3 = Color3.fromRGB(20, 20, 20) shabvsvsvvvavba.BackgroundTransparency = 0.5 shabvsvsvvvavba.BorderSizePixel = 0 shabvsvsvvvavba.Visible = false local kdjkdnsndjsgsneh = Instance.new("UICorner") kdjkdnsndjsgsneh.CornerRadius = UDim.new(0, 8) kdjkdnsndjsgsneh.Parent = shabvsvsvvvavba local lockbuttonstroke = Instance.new("UIStroke") lockbuttonstroke.Color = Color3.fromRGB(0, 255, 0) lockbuttonstroke.Thickness = 2 lockbuttonstroke.Parent = shabvsvsvvvavba local lockbuttontext = Instance.new("TextLabel") lockbuttontext.Size = UDim2.new(1, 0, 1, 0) lockbuttontext.BackgroundTransparency = 1 lockbuttontext.Text = "Unlocked" lockbuttontext.TextColor3 = Color3.fromRGB(0, 255, 0) lockbuttontext.TextSize = 14 lockbuttontext.Font = Enum.Font.SourceSansBold lockbuttontext.TextWrapped = true lockbuttontext.Parent = shabvsvsvvvavba local djdmdnsnnsndnsnsnsnd = Instance.new("TextButton") djdmdnsnnsndnsnsnsnd.Size = UDim2.new(1, 0, 1, 0) djdmdnsnnsndnsnsnsnd.BackgroundTransparency = 1 djdmdnsnnsndnsnsnsnd.Text = "" djdmdnsnnsndnsnsnsnd.Parent = shabvsvsvvvavba shabvsvsvvvavba.Parent = mmdbdndjxhdidjdkd local dkdnrjdmdjenndsj = Instance.new("Frame") dkdnrjdmdjenndsj.Name = "Switch Mode" dkdnrjdmdjenndsj.Size = UDim2.new(0, 50, 0, 50) dkdnrjdmdjenndsj.Position = UDim2.new(0.95, -50, 0.45, 0) dkdnrjdmdjenndsj.BackgroundColor3 = Color3.fromRGB(20, 20, 20) dkdnrjdmdjenndsj.BackgroundTransparency = 0.5 dkdnrjdmdjenndsj.BorderSizePixel = 0 dkdnrjdmdjenndsj.Visible = false local switchmodecorner = Instance.new("UICorner") switchmodecorner.CornerRadius = UDim.new(0, 8) switchmodecorner.Parent = dkdnrjdmdjenndsj local nvvcavabwnnwnwnw = Instance.new("UIStroke") nvvcavabwnnwnwnw.Color = Color3.fromRGB(0, 255, 0) nvvcavabwnnwnwnw.Thickness = 2 nvvcavabwnnwnwnw.Parent = dkdnrjdmdjenndsj local vvagaqeqrtwtwt = Instance.new("TextLabel") vvagaqeqrtwtwt.Size = UDim2.new(1, 0, 1, 0) vvagaqeqrtwtwt.BackgroundTransparency = 1 vvagaqeqrtwtwt.Text = pizztype vvagaqeqrtwtwt.TextColor3 = Color3.fromRGB(0, 255, 0) vvagaqeqrtwtwt.TextSize = 14 vvagaqeqrtwtwt.Font = Enum.Font.SourceSansBold vvagaqeqrtwtwt.TextWrapped = true vvagaqeqrtwtwt.Parent = dkdnrjdmdjenndsj local switchmodebtn = Instance.new("TextButton") switchmodebtn.Size = UDim2.new(1, 0, 1, 0) switchmodebtn.BackgroundTransparency = 1 switchmodebtn.Text = "" switchmodebtn.Parent = dkdnrjdmdjenndsj dkdnrjdmdjenndsj.Parent = mmdbdndjxhdidjdkd local guardLocked = false local guardLockedTarget = nil local function lockGuardAction() guardLocked = not guardLocked if guardLocked then guardLockedTarget = sltcted else guardLockedTarget = nil end end local function bbbsbsjeueieke() local opponents = {} for _, player in ipairs(players:GetPlayers()) do if player ~= player456squidgam and player.Team ~= player456squidgam.Team then table.insert(opponents, player) end end if #opponents == 0 then return end local currentIndex = 0 for i, player in ipairs(opponents) do if player.Character and player.Character == sltcted then currentIndex = i break end end local nextIndex = (currentIndex % #opponents) + 1 local nextPlayer = opponents[nextIndex] if nextPlayer and nextPlayer.Character then sltcted = nextPlayer.Character if guardLocked then guardLockedTarget = sltcted end if guardhighlight then guardhighlight:Destroy() guardhighlight = nil end guardhighlight = Instance.new("Highlight") guardhighlight.FillColor = Color3.fromRGB(0, 150, 255) guardhighlight.OutlineColor = Color3.fromRGB(0, 150, 255) guardhighlight.Parent = sltcted end end djdmdnsnnsndnsnsnsnd.Activated:Connect(function() if not qbaimboton or not gotfb() then return end locked = not locked ibl = tick() if locked then whotheqbalocksontoyuhfeelme = sjzmbdjsbdienxirxnhr lockbuttontext.Text = "Locked" lockbuttonstroke.Color = Color3.fromRGB(0, 150, 0) lockbuttontext.TextColor3 = Color3.fromRGB(0, 150, 0) else whotheqbalocksontoyuhfeelme = nil lockbuttontext.Text = "Unlocked" lockbuttonstroke.Color = Color3.fromRGB(0, 255, 0) lockbuttontext.TextColor3 = Color3.fromRGB(0, 255, 0) end end) switchmodebtn.Activated:Connect(function() if not qbaimboton or not gotfb() then return end pizztype = ggggggggghswidahbifoo[pizztype] vvagaqeqrtwtwt.Text = pizztype end) local function beamProjectile(g, v0, x0, t1) local c = 0.125 local p3 = 0.5 * g * t1 * t1 + v0 * t1 + x0 local p2 = p3 - (g * t1 * t1 + v0 * t1) / 3 local p1 = (c * g * t1 * t1 + 0.5 * v0 * t1 + x0 - c * (x0 + p3)) / (3 * c) - p2 local curve0 = (p1 - x0).Magnitude local curve1 = (p2 - p3).Magnitude local b = (x0 - p3).Unit local r1 = (p1 - x0).Unit local u1 = r1:Cross(b).Unit local r2 = (p2 - p3).Unit local u2 = r2:Cross(b).Unit b = u1:Cross(r1).Unit local cf1 = CFrame.new(x0.x, x0.y, x0.z, r1.x, u1.x, b.x, r1.y, u1.y, b.y, r1.z, u1.z, b.z) local cf2 = CFrame.new(p3.x, p3.y, p3.z, r2.x, u2.x, b.x, r2.y, u2.y, b.y, r2.z, u2.z, b.z) return curve0, -curve1, cf1, cf2 end local function bbbsiekdndn(bbbbskkegsjsme, maxdistance) local closestchar = nil local mindist = maxdistance for _, plr in pairs(players:GetPlayers()) do if plr ~= player456squidgam and plr.Team ~= player456squidgam.Team and plr.Character then local char = plr.Character local hrp = char:FindFirstChild("HumanoidRootPart") if hrp then local dist = (hrp.Position - bbbbskkegsjsme).Magnitude if dist < mindist then mindist = dist closestchar = char end end end end return closestchar end local function gotfb() local character = player456squidgam.Character if not character then return false end local humanoid = character:FindFirstChild("Humanoid") if not humanoid then return false end for _, tool in pairs(character:GetChildren()) do if tool:IsA("Tool") and (tool.Name:lower():match("football") or tool:FindFirstChild("Handle")) then return true end end return false end local function findclosestball() local character = player456squidgam.Character if not character or not character:FindFirstChild("HumanoidRootPart") then return nil end local hrp = character.HumanoidRootPart local closestball, mindist = nil, math.huge for _, ball in pairs(wakspase:GetChildren()) do if ball.Name:lower():match("football") and ball:IsA("BasePart") and not ball.Anchored then local dist = (hrp.Position - ball.Position).Magnitude if dist < mindist then closestball, mindist = ball, dist end end end return closestball, mindist end local function freezeoncatch(character) if not character then return end local humanoidrootpart = character:WaitForChild("HumanoidRootPart") character.ChildAdded:Connect(function(child) if freezetechon and child.Name == "Football" and child:IsA("Tool") then humanoidrootpart.Anchored = true task.wait(1.5) humanoidrootpart.Anchored = false end end) end local function ffffnfnjdndrmdjkdtgey() if not qbaimboton then return nil end local cc = wakspase.CurrentCamera local stupidwrs = math.huge local uglywrs = nil for _, obj in ipairs(wakspase:GetChildren()) do if obj:IsA("Model") and obj:FindFirstChild("Humanoid") and obj:FindFirstChild("HumanoidRootPart") then local humanoid = obj:FindFirstChild("Humanoid") local characterplayer = players:GetPlayerFromCharacter(obj) if humanoid.Health > 0 and obj ~= player456squidgam.Character and characterplayer and characterplayer.Team == player456squidgam.Team then local hrp = obj:FindFirstChild("HumanoidRootPart") local screenpoint = cc:WorldToViewportPoint(hrp.Position) local check = (Vector2.new(userinputservice:GetMouseLocation().X, userinputservice:GetMouseLocation().Y) - Vector2.new(screenpoint.X, screenpoint.Y)).Magnitude if check < stupidwrs then uglywrs = obj stupidwrs = check end end end end local gggnpcbtw = math.huge local tgpx = nil for _, bot in ipairs(wakspase:GetChildren()) do if bot.Name == "npcwr" then local stationa = bot:FindFirstChild("a") local stationb = bot:FindFirstChild("b") if stationa and stationb then local bot1 = stationa:FindFirstChild("bot 1") local bot3 = stationb:FindFirstChild("bot 3") local bots = {bot1, bot3} for _, currentbot in ipairs(bots) do if currentbot and currentbot:FindFirstChild("HumanoidRootPart") then local screenpoint = cc:WorldToViewportPoint(currentbot.HumanoidRootPart.Position) local check = (Vector2.new(userinputservice:GetMouseLocation().X, userinputservice:GetMouseLocation().Y) - Vector2.new(screenpoint.X, screenpoint.Y)).Magnitude if check < gggnpcbtw then tgpx = currentbot gggnpcbtw = check end end end end end end return stupidwrs < gggnpcbtw and uglywrs or tgpx end local function hitboxx(oid) if not oid or hitboxes[oid] or not magson or not showhitboxon then return end local holder = oid:FindFirstAncestorOfClass("Model") if holder and players:GetPlayerFromCharacter(holder) then return end local hitbox = Instance.new("Part") hitbox.Name = "Hitbox" hitbox.Size = Vector3.new(magsrange, magsrange, magsrange) hitbox.Anchored = true hitbox.CanCollide = false hitbox.Transparency = 0.4 hitbox.Material = Enum.Material.ForceField hitbox.Color = hitboxcolor == "Blue" and Color3.fromRGB(0, 0, 255) or hitboxcolor == "Red" and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 255, 0) hitbox.CastShadow = false hitbox.CFrame = oid.CFrame if hitboxshape == "Sphere" then hitbox.Shape = Enum.PartType.Ball elseif hitboxshape == "Square" then hitbox.Shape = Enum.PartType.Block elseif hitboxshape == "Diamond" then hitbox.Shape = Enum.PartType.Block hitbox.Orientation = Vector3.new(0, 45, 45) end hitbox.Parent = oid local uistroke = Instance.new("UIStroke") uistroke.Color = Color3.fromRGB(255, 255, 255) uistroke.Thickness = 1 uistroke.Transparency = 0 uistroke.Parent = hitbox hitboxes[oid] = {part = hitbox} local connection connection = realshit.Heartbeat:Connect(function(dt) if not oid or not oid.Parent or not magson or not showhitboxon then if hitbox then hitbox:Destroy() end if connection then connection:Disconnect() end hitboxes[oid] = nil return end local holder = oid:FindFirstAncestorOfClass("Model") if holder and players:GetPlayerFromCharacter(holder) then hitbox:Destroy() connection:Disconnect() hitboxes[oid] = nil return end hitbox.CFrame = oid.CFrame if hitboxshape == "Diamond" then hitbox.Orientation = Vector3.new(0, 45, 45) end hitbox.Size = Vector3.new(magsrange, magsrange, magsrange) hitbox.Color = hitboxcolor == "Blue" and Color3.fromRGB(0, 0, 255) or hitboxcolor == "Red" and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 255, 0) end) end local function fitbalsize() for oid, football in pairs(hitboxes) do if football and football.part and oid.part then oid.part.Size = Vector3.new(magsrange, magsrange, magsrange) oid.part.Color = hitboxcolor == "Blue" and Color3.fromRGB(0, 0, 255) or hitboxcolor == "Red" and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 255, 0) if hitboxshape == "Diamond" then oid.part.Orientation = Vector3.new(0, 45, 45) end else if oid.part then oid.part:Destroy() end hitboxes[oid] = nil end end end local function remove() for oid, football in pairs(hitboxes) do if oid.part then oid.part:Destroy() end end hitboxes = {} end local function footballhitbox() if not magson then return end for _, child in pairs(wakspase:GetChildren()) do if child.Name == "Football" and child:IsA("BasePart") then hitboxx(child) end end end local function getfutbal() local character = player456squidgam.Character if not (character and character:FindFirstChild("HumanoidRootPart")) then return nil end local playerpos = character.HumanoidRootPart.Position local closestfootballpart, mindist = nil, math.huge for _, child in pairs(wakspase:GetChildren()) do if child.Name:lower():match("football") and child:IsA("BasePart") then local dist = (child.Position - playerpos).Magnitude if dist < mindist and dist <= magsrange then closestfootballpart, mindist = child, dist end end end return closestfootballpart end local function catch(ball) local character = player456squidgam.Character if not character then return end local catchleft = character:FindFirstChild("CatchLeft") local catchright = character:FindFirstChild("CatchRight") local closest, mindist = nil, math.huge local ballpos = ball.Position local rg = magsrange if catchleft and catchleft:IsA("BasePart") then local dist = (catchleft.Position - ballpos).Magnitude if dist < mindist and dist <= rg then closest, mindist = catchleft, dist end end if catchright and catchright:IsA("BasePart") then local dist = (catchright.Position - ballpos).Magnitude if dist < mindist and dist <= rg then closest, mindist = catchright, dist end end return closest end local function whenmoving(character) if not character then return end local humanoid = character:WaitForChild("Humanoid") local humanoidrootpart = character:WaitForChild("HumanoidRootPart") humanoid.StateChanged:Connect(function(_, newstate) if newstate == Enum.HumanoidStateType.Jumping and jumpoweron then task.wait(0.05) humanoidrootpart.AssemblyLinearVelocity = humanoidrootpart.AssemblyLinearVelocity + Vector3.new(0, jumpboost - 50, 0) end end) end local function njc(char) if not char then return end local hum = char:WaitForChild("Humanoid") local connection = realshit.Stepped:Connect(function() if nojpcooldownon then hum:SetStateEnabled(Enum.HumanoidStateType.Jumping, true) end end) njcconnections[char] = connection end local function nocollide(char) for _, part in ipairs(char:GetDescendants()) do if part:IsA("BasePart") and part.CanCollide then part.CanCollide = false end end end local function oc(character) if not character then return end local leftleg = character:WaitForChild("Left Leg") local rightleg = character:WaitForChild("Right Leg") local humanoid = character:WaitForChild("Humanoid") local function ontouch(hit) if not hit.Name:match("Arm") and not hit.Name:match("Head") then return end if hit:IsDescendantOf(character) then return end if humanoid.FloorMaterial ~= Enum.Material.Air then return end character.HumanoidRootPart.AssemblyLinearVelocity = character.HumanoidRootPart.AssemblyLinearVelocity + Vector3.new(0, autoboostpower, 0) end leftleg.Touched:Connect(ontouch) rightleg.Touched:Connect(ontouch) end local function rrrrrrrsizenugget(character) if not character then return end if catchresizeon then local catchleft = character:FindFirstChild("CatchLeft") local catchright = character:FindFirstChild("CatchRight") if catchleft then catchleft.Size = Vector3.new(catchresizerange, catchresizerange, catchresizerange) catchleft.Transparency = 1 end if catchright then catchright.Size = Vector3.new(catchresizerange, catchresizerange, catchresizerange) catchright.Transparency = 1 end else local catchleft = character:FindFirstChild("CatchLeft") local catchright = character:FindFirstChild("CatchRight") if catchleft then catchleft.Size = Vector3.new(0.75, 5, 1.5) catchleft.Transparency = 1 end if catchright then catchright.Size = Vector3.new(0.75, 5, 1.5) catchright.Transparency = 1 end end end local function tzts(v) if v then for _, part in pairs(wakspase:GetDescendants()) do if part:IsA("BasePart") then if not part:GetAttribute("originalmaterial") then part:SetAttribute("originalmaterial", part.Material.Name) end part.Material = Enum.Material.SmoothPlastic end end else for _, part in pairs(wakspase:GetDescendants()) do if part:IsA("BasePart") and part:GetAttribute("originalmaterial") then local originalmaterial = part:GetAttribute("originalmaterial") local materialenum = Enum.Material[originalmaterial] if materialenum then part.Material = materialenum else part.Material = Enum.Material.SmoothPlastic end end end end task.wait(0.1) end getgenv().bsbsbdbanglebdjjdduhj = function() local localplayer = game:GetService("Players").LocalPlayer local runservice = game:GetService("RunService") getgenv().ae = false getgenv().jdhdhebehenjehhightigh = 50 getgenv().boosting = false local function ishift() return game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftShift) or game:GetService("UserInputService"):IsGamepadButtonDown(Enum.UserInputType.Gamepad1, Enum.KeyCode.ButtonR1) end local function jb(character) if not character then return end local humanoid = character:WaitForChild("Humanoid") local humanoidrootpart = character:WaitForChild("HumanoidRootPart") humanoid.StateChanged:Connect(function(_, newstate) if newstate == Enum.HumanoidStateType.Jumping and getgenv().ae then task.wait(0.05) humanoidrootpart.AssemblyLinearVelocity = Vector3.new( humanoidrootpart.AssemblyLinearVelocity.X, getgenv().boosting and getgenv().jdhdhebehenjehhightigh or (getgenv().jdhdhebehenjehhightigh - 10), humanoidrootpart.AssemblyLinearVelocity.Z ) end end) end local function duboost() if not getgenv().boosting then getgenv().boosting = true task.delay(0.25, function() getgenv().boosting = false end) end end if localplayer.Character then jb(localplayer.Character) end localplayer.CharacterAdded:Connect(jb) runservice.RenderStepped:Connect(function() if getgenv().ae and ishift() then duboost() end end) end getgenv().bsbsbdbanglebdjjdduhj() local function eonangle(kksnalll, horizontaldistance) if autoangleon or pizztype == "Bullet" then local horizontalcomponent = Vector3.new(kksnalll.X, 0, kksnalll.Z).Magnitude local verticalcomponent = kksnalll.Y if horizontalcomponent == 0 then return 90 end local angleradians = math.atan(verticalcomponent / horizontalcomponent) return math.deg(angleradians) end return 40 end local function trackvpnmademethisinjanuaryandijustimprovedit(djkdheudyyyyyysnnse, targetpos, g, angledegrees) local rad = math.rad(angledegrees) local dxz = Vector3.new(targetpos.X - djkdheudyyyyyysnnse.X, 0, targetpos.Z - djkdheudyyyyyysnnse.Z).Magnitude local dy = targetpos.Y - djkdheudyyyyyysnnse.Y local cosangle = math.cos(rad) local sinangle = math.sin(rad) local numerator = g.Magnitude * dxz * dxz local denominator = 2 * cosangle * cosangle * (dxz * math.tan(rad) - dy) if denominator <= 0 then return nil end local v0mag = math.sqrt(numerator / denominator) local horizontaldir = (Vector3.new(targetpos.X, djkdheudyyyyyysnnse.Y, targetpos.Z) - djkdheudyyyyyysnnse).Unit return horizontaldir * (v0mag * cosangle) + Vector3.new(0, v0mag * sinangle, 0) end local function findclosestsleveesor(maxdistance) local character = player456squidgam.Character if not character then return nil end local hrp = character:FindFirstChild("HumanoidRootPart") if not hrp then return nil end local closestdistance = maxdistance local closestcharacter = nil for _, plr in ipairs(players:GetPlayers()) do if plr == player456squidgam or plr.Team == player456squidgam.Team then continue end local targetchar = plr.Character if not targetchar then continue end local targethrp = targetchar:FindFirstChild("HumanoidRootPart") if not targethrp then continue end local hasfootball = false for _, item in ipairs(targetchar:GetChildren()) do if item:IsA("Tool") and item.Name:match("Football") then hasfootball = true break end end if not hasfootball then continue end local distance = (hrp.Position - targethrp.Position).Magnitude if distance < closestdistance then closestdistance = distance closestcharacter = targetchar end end return closestcharacter end local function isdisbihinterceptable(djkdheudyyyyyysnnse, v0, fltibbo, g, dodnjdmxnekdnd) local step = 0.1 local jsnzksnejdmdkejyyyyh = 10 local didkeihhdiddyoil = 1.2 for todnsjjjjjjjj = step, fltibbo, step do local blatopbigtshirtbillielish = djkdheudyyyyyysnnse + v0 * todnsjjjjjjjj + 0.5 * g * todnsjjjjjjjj * todnsjjjjjjjj for _, plr in ipairs(players:GetPlayers()) do if plr ~= player456squidgam and plr.Team ~= player456squidgam.Team then local char = plr.Character if char then local hrp = char:FindFirstChild("HumanoidRootPart") if hrp then local opppos = hrp.Position local oppvel = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z) local oppfuturepos = opppos + oppvel * todnsjjjjjjjj * didkeihhdiddyoil local ballgroundpos = Vector3.new(blatopbigtshirtbillielish.X, 0, blatopbigtshirtbillielish.Z) local oppgroundpos = Vector3.new(oppfuturepos.X, 0, oppfuturepos.Z) if (ballgroundpos - oppgroundpos).Magnitude <= jsnzksnejdmdkejyyyyh then return true end end end end end end return false end local function thetriggathatholdingfb() for _, p in ipairs(players:GetPlayers()) do if p ~= player456squidgam and p.Team ~= player456squidgam.Team and p.Character then for _, tool in pairs(p.Character:GetChildren()) do if tool:IsA("Tool") and (tool.Name:lower():match("football") or tool:FindFirstChild("Handle")) then return p.Character end end end end for _, bot in ipairs(wakspase:GetChildren()) do if bot.Name == "npcwr" then local stationa = bot:FindFirstChild("a") local stationb = bot:FindFirstChild("b") if stationa and stationb then local bot1 = stationa:FindFirstChild("bot 1") local bot3 = stationb:FindFirstChild("bot 3") local bots = {bot1, bot3} for _, currentbot in ipairs(bots) do if currentbot then for _, tool in pairs(currentbot:GetChildren()) do if tool:IsA("Tool") and (tool.Name:lower():match("football") or tool:FindFirstChild("Handle")) then return currentbot end end end end end end end return nil end djdmdnsnnsndnsnsnsnd.Activated:Connect(function() if not qbaimboton or not gotfb() then return end locked = not locked ibl = tick() if locked then whotheqbalocksontoyuhfeelme = sjzmbdjsbdienxirxnhr lockbuttontext.Text = "Locked" lockbuttonstroke.Color = Color3.fromRGB(0, 150, 0) lockbuttontext.TextColor3 = Color3.fromRGB(0, 150, 0) else whotheqbalocksontoyuhfeelme = nil lockbuttontext.Text = "Unlocked" lockbuttonstroke.Color = Color3.fromRGB(0, 255, 0) lockbuttontext.TextColor3 = Color3.fromRGB(0, 255, 0) end end) switchmodebtn.Activated:Connect(function() if not qbaimboton or not gotfb() then return end pizztype = ggggggggghswidahbifoo[pizztype] vvagaqeqrtwtwt.Text = pizztype end) local magsgroup = shiiifooionknowtftonamets.catching:AddLeftGroupbox("Mags") magsgroup:AddSlider("magsrange", { Text = "mags range", Min = 0, Max = 25, Default = 0, Rounding = 1, Callback = function(Value) magsrange = Value if magson and showhitboxon then fitbalsize() end end }) magsgroup:AddToggle("mags", { Text = "mags", Default = false, Callback = function(Value) magson = Value if not Value then remove() elseif showhitboxon then footballhitbox() end end }) magsgroup:AddSlider("magsdelay", { Text = "mags delay", Min = 0, Max = 1, Default = 0, Rounding = 1, Callback = function(Value) magsdelay = Value magsdelayon = Value > 0 end }) magsgroup:AddDropdown("magtype", { Values = {"Blatant", "Legit", "League"}, Default = "Blatant", Text = "mag type", Callback = function(Value) local newvalue = Value == "Blatant" and 25 or Value == "Legit" and 10 or 3 options.magsrange:SetValue(newvalue) end }) magsgroup:AddToggle("showhitbox", { Text = "show hitbox", Default = false, Callback = function(Value) showhitboxon = Value if not Value then remove() elseif magson then footballhitbox() end end }) magsgroup:AddDropdown("hitboxshape", { Values = {"Sphere", "Square", "Diamond"}, Default = "Sphere", Text = "hitbox shape", Callback = function(Value) hitboxshape = Value if magson and showhitboxon then remove() footballhitbox() end end }) magsgroup:AddDropdown("hitboxcolor", { Values = {"Green", "Blue", "Red"}, Default = "Green", Text = "hitbox color", Callback = function(Value) hitboxcolor = Value if magson and showhitboxon then fitbalsize() end end }) local resizegroup = shiiifooionknowtftonamets.catching:AddRightGroupbox("Resize") resizegroup:AddToggle("catchresize", { Text = "catch resize", Default = false, Callback = function(Value) catchresizeon = Value local char = player456squidgam.Character if char then rrrrrrrsizenugget(char) end end }) resizegroup:AddSlider("catchresizerange", { Text = "range", Min = 1, Max = 25, Default = 10, Rounding = 1, Callback = function(Value) catchresizerange = Value if catchresizeon then local char = player456squidgam.Character if char then rrrrrrrsizenugget(char) end end end }) local freezegroup = shiiifooionknowtftonamets.catching:AddLeftGroupbox("Freeze") freezegroup:AddToggle("freezetech", { Text = "freeze tech", Default = false, Callback = function(Value) freezetechon = Value end }) freezegroup:AddSlider("freezeduration", { Text = "freeze duration", Min = 0.1, Max = 3, Default = 0.1, Rounding = 1, Callback = function(Value) freezeduration = Value end }) freezegroup:AddDropdown("freezemode", { Values = {"Before catch", "On catch"}, Default = "On catch", Text = "freeze mode", Callback = function(Value) freezemode = Value end }) freezegroup:AddSlider("beforerange", { Text = "before range", Min = 1, Max = 80, Default = 10, Rounding = 1, Callback = function(Value) beforerange = Value end }) local pullgroup = shiiifooionknowtftonamets.catching:AddRightGroupbox("Pull") pullgroup:AddToggle("pullvector", { Text = "pull vector", Default = false, Callback = function(Value) pullvector = Value end }) pullgroup:AddSlider("pullvectorpower", { Text = "pull vector power", Min = 1, Max = 3, Default = 1, Rounding = 1, Callback = function(Value) pullvectorpower = Value end }) pullgroup:AddSlider("pullvectordistance", { Text = "pull vector distance", Min = 5, Max = 20, Default = 5, Rounding = 1, Callback = function(Value) pullvectordistance = Value end }) pullgroup:AddDropdown("pullvectortype", { Values = {"Velocity", "Teleport"}, Default = "Velocity", Text = "pull vector type", Callback = function(Value) pullvectortype = Value end }) local jumppowergroup = shiiifooionknowtftonamets.physics:AddLeftGroupbox("JumpPower") jumppowergroup:AddToggle("jumppower", { Text = "jump power", Default = false, Callback = function(Value) jumpoweron = Value end }) jumppowergroup:AddSlider("jumpboost", { Text = "jump power", Min = 50, Max = 70, Default = 50, Rounding = 1, Callback = function(Value) jumpboost = Value end }) local physicstuffgroup = shiiifooionknowtftonamets.physics:AddRightGroupbox("Physic Stuff") physicstuffgroup:AddToggle("antioob", { Text = "anti oob", Default = false, Callback = function(Value) antioobon = Value local boundariesfolder = wakspase:FindFirstChild("Models") and wakspase.Models:FindFirstChild("Boundaries") if boundariesfolder then for _, boundary in pairs(boundariesfolder:GetChildren()) do if Value then boundary.Parent = nil else boundary.Parent = boundariesfolder end end end end }) physicstuffgroup:AddToggle("nojpcooldown", { Text = "no jp cooldown", Default = false, Callback = function(Value) nojpcooldownon = Value if not Value and player456squidgam.Character then local connection = njcconnections[player456squidgam.Character] if connection then connection:Disconnect() njcconnections[player456squidgam.Character] = nil end elseif Value and player456squidgam.Character then njc(player456squidgam.Character) end end }) local anglegroup = shiiifooionknowtftonamets.physics:AddLeftGroupbox("Angle") anglegroup:AddToggle("angleenhancer", { Text = "angle enhancer", Default = false, Callback = function(Value) getgenv().ae = Value end }) anglegroup:AddSlider("angleboost", { Text = "angle boost", Min = 50, Max = 70, Default = 50, Rounding = 1, Callback = function(Value) getgenv().jdhdhebehenjehhightigh = Value end }) local boostgroup = shiiifooionknowtftonamets.physics:AddRightGroupbox("Boost") boostgroup:AddToggle("autoboost", { Text = "auto boost", Default = false, Callback = function(Value) autobooston = Value end }) boostgroup:AddSlider("autoboostpower", { Text = "auto boost power", Min = 1, Max = 20, Default = 1, Rounding = 1, Callback = function(Value) autoboostpower = Value end }) local cframespeedgroup = shiiifooionknowtftonamets.physics:AddLeftGroupbox("CFrame Speed") cframespeedgroup:AddToggle("cframespeed", { Text = "cframe speed", Default = false, Callback = function(Value) cframespeedon = Value end }) cframespeedgroup:AddSlider("cframespeedvalue", { Text = "cframe speed", Min = 0.01, Max = 0.4, Default = 0.01, Rounding = 2, Callback = function(Value) cframespeed = Value end }) local blockgroup = shiiifooionknowtftonamets.physics:AddRightGroupbox("Block") blockgroup:AddToggle("blockreach", { Text = "block reach", Default = false, Callback = function(Value) fatminsksndjd = Value end }) blockgroup:AddSlider("blockrange", { Text = "block range", Min = 0, Max = 15, Default = 10, Rounding = 1, Callback = function(Value) djdnshheilppeisllak = Value end }) local antiblockgroup = shiiifooionknowtftonamets.physics:AddLeftGroupbox("Anti Block") antiblockgroup:AddToggle("antiblock", { Text = "anti block", Default = false, Callback = function(Value) antiblokon = Value end }) local fatballgwap = shiiifooionknowtftonamets.physics:AddRightGroupbox("Tackle") fatballgwap:AddToggle("clicktackle", { Text = "click tackle", Default = false, Callback = function(Value) clicktackleon = Value end }) fatballgwap:AddSlider("clicktacklerange", { Text = "click tackle range", Min = 1, Max = 15, Default = 5, Rounding = 1, Callback = function(Value) clicktacklerange = Value end }) local dumbasm = shiiifooionknowtftonamets.automatics:AddLeftGroupbox("AutoCaptain") dumbasm:AddToggle("autocaptain", { Text = "auto captain", Default = false, Callback = function(Value) autocaptainon = Value end }) local rushgroup = shiiifooionknowtftonamets.automatics:AddRightGroupbox("Rush") rushgroup:AddToggle("autorush", { Text = "auto rush", Default = false, Callback = function(Value) autorushon = Value end }) rushgroup:AddToggle("qbprediction", { Text = "qb prediction", Default = false, Callback = function(Value) autorushpredict = Value end }) local catchgroup = shiiifooionknowtftonamets.automatics:AddLeftGroupbox("Catch") catchgroup:AddToggle("autocatch", { Text = "auto catch", Default = false, Callback = function(Value) autocatchon = Value end }) catchgroup:AddSlider("catchdistance", { Text = "catch distance", Min = 1, Max = 30, Default = 10, Rounding = 1, Callback = function(Value) catchdistance = Value end }) local guardgroup = shiiifooionknowtftonamets.automatics:AddRightGroupbox("guard") guardgroup:AddToggle("autoguard", { Text = "autoguard", Default = false, Callback = function(Value) autoguardon = Value if not Value and sltcted and guardhighlight then guardhighlight:Destroy() guardhighlight = nil sltcted = nil end end }) guardgroup:AddDropdown("guardmode", { Values = {"pr", "lockdown"}, Default = "pr", Text = "mode", Callback = function(Value) ggahshdhdhdh = Value end }) guardgroup:AddSlider("pryards", { Text = "pr yards", Min = 0, Max = 50, Default = 0, Rounding = 0, Callback = function(Value) pryards = Value end }) guardgroup:AddLabel("toggle autoguard"):AddKeyPicker("AutoGuardToggleKey", { Default = "G", SyncToggleState = false, Mode = "Toggle", Text = "toggle autoguard", Callback = function(Value) if Value then toggles.autoguard:SetValue(not toggles.autoguard.Value) end end }) guardgroup:AddLabel("switch guard mode"):AddKeyPicker("SwitchGuardModeKey", { Default = "T", SyncToggleState = false, Mode = "Toggle", Text = "switch guard mode", Callback = function(Value) if Value then local currentMode = options.guardmode.Value local newMode = currentMode == "pr" and "lockdown" or "pr" options.guardmode:SetValue(newMode) end end }) guardgroup:AddLabel("switch plr"):AddKeyPicker("SwitchPlrKey", { Default = "H", SyncToggleState = false, Mode = "Toggle", Text = "switch plr", Callback = function(Value) if Value then bbbsbsjeueieke() end end }) local qbstuffgroup = shiiifooionknowtftonamets.throwing:AddLeftGroupbox("QB Stuff") qbstuffgroup:AddButton({ Text = "Switch Throw Type", Func = function() if qbaimboton then pizztype = ggggggggghswidahbifoo[pizztype] vvagaqeqrtwtwt.Text = pizztype end end }) qbstuffgroup:AddToggle("qbaimbot", { Text = "qb aimbot", Default = false, Callback = function(Value) qbaimboton = Value locked = false whotheqbalocksontoyuhfeelme = nil baskelehbambam = { angle = 40, power = 0, direction = Vector3.new(0, 0, 0) } highlight.Parent = nil mdmdmdmememjxakm.Visible = false shabvsvsvvvavba.Visible = false dkdnrjdmdjenndsj.Visible = false if trajectorybeam then trajectorybeam:Destroy() end if trajectoryattachment0 then trajectoryattachment0:Destroy() end if trajectoryattachment1 then trajectoryattachment1:Destroy() end if trajectoryendpart then trajectoryendpart:Destroy() end if Value and gotfb() then shabvsvsvvvavba.Visible = lockbuttonon dkdnrjdmdjenndsj.Visible = switchmodebuttonon mdmdmdmememjxakm.Visible = showui end end }) qbstuffgroup:AddToggle("showui", { Text = "show ui", Default = false, Callback = function(Value) showui = Value if qbaimboton and gotfb() then mdmdmdmememjxakm.Visible = Value end end }) qbstuffgroup:AddToggle("lockbuttontoggle", { Text = "lock button", Default = false, Callback = function(Value) lockbuttonon = Value if qbaimboton and gotfb() then shabvsvsvvvavba.Visible = Value end end }) qbstuffgroup:AddToggle("switchmodebuttontoggle", { Text = "switch mode button", Default = false, Callback = function(Value) switchmodebuttonon = Value if qbaimboton and gotfb() then dkdnrjdmdjenndsj.Visible = Value end end }) qbstuffgroup:AddToggle("trajectory", { Text = "trajectory", Default = false, Callback = function(Value) trajectoryon = Value if not Value then if trajectorybeam then trajectorybeam:Destroy() end if trajectoryattachment0 then trajectoryattachment0:Destroy() end if trajectoryattachment1 then trajectoryattachment1:Destroy() end if trajectoryendpart then trajectoryendpart:Destroy() end trajectorybeam = nil trajectoryattachment0 = nil trajectoryattachment1 = nil trajectoryendpart = nil end end }) qbstuffgroup:AddToggle("autoangle", { Text = "auto angle", Default = false, Callback = function(Value) autoangleon = Value end }) qbstuffgroup:AddSlider("dimelead", { Text = "dime lead", Min = 0, Max = 20, Default = 5, Rounding = 1, Callback = function(Value) typlead["Dime"] = Value end }) qbstuffgroup:AddSlider("maglead", { Text = "mag lead", Min = 0, Max = 20, Default = 4, Rounding = 1, Callback = function(Value) typlead["Mag"] = Value end }) qbstuffgroup:AddSlider("bulletlead", { Text = "bullet lead", Min = 0, Max = 20, Default = 0.6, Rounding = 1, Callback = function(Value) typlead["Bullet"] = Value end }) qbstuffgroup:AddLabel("lock/unlock"):AddKeyPicker("LockKey", { Default = "G", SyncToggleState = false, Mode = "Toggle", Text = "lock key", Callback = function(Value) if Value and qbaimboton and gotfb() then locked = not locked if locked then lockbuttontext.Text = "Locked" lockbuttonstroke.Color = Color3.fromRGB(0, 150, 0) lockbuttontext.TextColor3 = Color3.fromRGB(0, 150, 0) else lockbuttontext.Text = "Unlocked" lockbuttonstroke.Color = Color3.fromRGB(0, 255, 0) lockbuttontext.TextColor3 = Color3.fromRGB(0, 255, 0) end end end }) qbstuffgroup:AddLabel("switch mode"):AddKeyPicker("SwitchModeKey", { Default = "Z", SyncToggleState = false, Mode = "Toggle", Text = "switch mode key", Callback = function(Value) if Value and qbaimboton and gotfb() then pizztype = ggggggggghswidahbifoo[pizztype] vvagaqeqrtwtwt.Text = pizztype end end }) local heightgroup = shiiifooionknowtftonamets.throwing:AddRightGroupbox("Height") heightgroup:AddSlider("bulletheight", { Text = "bullet height", Min = 1, Max = 30, Default = 1, Rounding = 1, Callback = function(Value) if pizztype == "Bullet" then typlead["Bullet"] = Value end end }) heightgroup:AddSlider("magheight", { Text = "mag height", Min = 1, Max = 30, Default = 1, Rounding = 1, Callback = function(Value) if pizztype == "Mag" then typlead["Mag"] = Value end end }) heightgroup:AddSlider("dimeheight", { Text = "dime height", Min = 1, Max = 30, Default = 1, Rounding = 1, Callback = function(Value) if pizztype == "Dime" then typlead["Dime"] = Value end end }) local customstuffgroup = shiiifooionknowtftonamets.throwing:AddLeftGroupbox("Custom Stuff") customstuffgroup:AddToggle("customangle", { Text = "custom angle", Default = false, Callback = function(Value) customangleon = Value end }) customstuffgroup:AddSlider("customanglevalue", { Text = "angle", Min = 0, Max = 100, Default = 40, Rounding = 1, Callback = function(Value) blackmimad = Value end }) customstuffgroup:AddLabel("increase angle"):AddKeyPicker("IncreaseAngleKey", { Default = "V", Mode = "Hold", Text = "increase angle", Callback = function(Value) if Value then blackmimad = math.min(blackmimad + 1, 100) options.customanglevalue:SetValue(blackmimad) end end }) customstuffgroup:AddLabel("decrease angle"):AddKeyPicker("DecreaseAngleKey", { Default = "B", Mode = "Hold", Text = "decrease angle", Callback = function(Value) if Value then blackmimad = math.max(blackmimad - 1, 0) options.customanglevalue:SetValue(blackmimad) end end }) local aimbotgroup = shiiifooionknowtftonamets.kicker:AddLeftGroupbox("Aimbot") aimbotgroup:AddToggle("kickeraimbot", { Text = "kicker aimbot", Default = true, Callback = function(Value) autokicker.Value = Value end }) aimbotgroup:AddToggle("kickerrandom", { Text = "random", Default = false, Callback = function(Value) autokickerrandom.Value = Value end }) aimbotgroup:AddSlider("kickeraccuracy", { Text = "accuracy", Min = 0, Max = 100, Default = 93, Rounding = 0, Callback = function(Value) autokickeraccuracy.Value = Value end }) aimbotgroup:AddSlider("kickerpower", { Text = "power", Min = 0, Max = 100, Default = 93, Rounding = 0, Callback = function(Value) autokickerpower.Value = Value end }) local footballHighlights = {} local highlightConnection = nil local highlightMode = "fill" local footballgroup = shiiifooionknowtftonamets.visuals:AddLeftGroupbox("Football") footballgroup:AddToggle("highlightfootball", { Text = "highlight football", Default = false, Callback = function(Value) if Value then for _, child in ipairs(wakspase:GetChildren()) do if child.Name:lower():match("football") and child:IsA("BasePart") then local highlight = Instance.new("Highlight") highlight.Adornee = child highlight.FillColor = Color3.new(1, 1, 1) highlight.OutlineColor = Color3.new(1, 1, 1) if highlightMode == "fill" then highlight.FillTransparency = 0 highlight.OutlineTransparency = 1 else highlight.FillTransparency = 1 highlight.OutlineTransparency = 0 end highlight.Parent = child footballHighlights[child] = highlight end end highlightConnection = wakspase.ChildAdded:Connect(function(child) if child.Name:lower():match("football") and child:IsA("BasePart") then local highlight = Instance.new("Highlight") highlight.Adornee = child highlight.FillColor = Color3.new(1, 1, 1) highlight.OutlineColor = Color3.new(1, 1, 1) if highlightMode == "fill" then highlight.FillTransparency = 0 highlight.OutlineTransparency = 1 else highlight.FillTransparency = 1 highlight.OutlineTransparency = 0 end highlight.Parent = child footballHighlights[child] = highlight end end) else if highlightConnection then highlightConnection:Disconnect() highlightConnection = nil end for football, highlight in pairs(footballHighlights) do highlight:Destroy() end footballHighlights = {} end end }) footballgroup:AddDropdown("hlmode", { Values = {"fill", "outline"}, Default = "fill", Text = "hl mode", Callback = function(Value) highlightMode = Value for football, highlight in pairs(footballHighlights) do if Value == "fill" then highlight.FillTransparency = 0 highlight.OutlineTransparency = 1 else highlight.FillTransparency = 1 highlight.OutlineTransparency = 0 end end end }) footballgroup:AddToggle("ballpath", { Text = "ball path", Default = false, Callback = function(Value) if Value then local vampyxpiykwhoheisgavemethisassshi = true eventconnection = wakspase.ChildAdded:Connect(function(b) if b.Name == "Football" and b:IsA("BasePart") then task.wait() local vel = b.Velocity local pos = b.Position local c0, c1, cf1, cf2 = beamProjectile(Vector3.new(0, -28, 0), vel, pos, 10) local beam = Instance.new("Beam") local a0 = Instance.new("Attachment") local a1 = Instance.new("Attachment") beam.Color = ColorSequence.new(predictioncolor) beam.Transparency = NumberSequence.new({ NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.01, 0), NumberSequenceKeypoint.new(0.99, 0), NumberSequenceKeypoint.new(1, 0.01) }) beam.CurveSize0 = c0 beam.CurveSize1 = c1 beam.Segments = 1750 beam.Width0 = 1 beam.Width1 = 1 beam.Name = "Hitbox" beam.Parent = wakspase.Terrain a0.Parent = wakspase.Terrain a1.Parent = wakspase.Terrain a0.CFrame = a0.Parent.CFrame:Inverse() * cf1 a1.CFrame = a1.Parent.CFrame:Inverse() * cf2 beam.Attachment0 = a0 beam.Attachment1 = a1 local landedconnection landedconnection = realshit.Heartbeat:Connect(function(dt) if b.Velocity.Magnitude < 1 then landedconnection:Disconnect() if vampyxpiykwhoheisgavemethisassshi then local vvsuenhdndhd = 0 local bigidaada = 1 while vvsuenhdndhd < bigidaada do local alpha = vvsuenhdndhd / bigidaada local transparencyseq = NumberSequence.new({ NumberSequenceKeypoint.new(0, alpha), NumberSequenceKeypoint.new(1, alpha) }) beam.Transparency = transparencyseq vvsuenhdndhd = vvsuenhdndhd + dt task.wait() end end beam:Destroy() a0:Destroy() a1:Destroy() end end) task.spawn(function() repeat task.wait() until b.Parent ~= wakspase if beam.Parent then beam:Destroy() a0:Destroy() a1:Destroy() end end) end end) else if eventconnection then eventconnection:Disconnect() eventconnection = nil end for _, obj in pairs(wakspase.Terrain:GetChildren()) do if obj:IsA("Beam") and obj.Name == "Hitbox" then obj:Destroy() elseif obj:IsA("Attachment") then obj:Destroy() end end end end }) footballgroup:AddDropdown("bpcolor", { Values = {"Red", "White", "Green", "Black", "Purple"}, Default = "White", Text = "bp color", Callback = function(Value) if Value == "Red" then predictioncolor = Color3.new(1, 0, 0) elseif Value == "White" then predictioncolor = Color3.new(1, 1, 1) elseif Value == "Green" then predictioncolor = Color3.new(0, 1, 0) elseif Value == "Black" then predictioncolor = Color3.new(0, 0, 0) elseif Value == "Purple" then predictioncolor = Color3.fromRGB(128, 0, 128) end end }) footballgroup:AddDropdown("trajectorycolor", { Values = {"Blue", "Green", "White", "Black", "Purple"}, Default = "White", Text = "trajectory color", Callback = function(Value) if Value == "Blue" then trajectorycolor = Color3.new(0, 0, 1) elseif Value == "Green" then trajectorycolor = Color3.new(0, 1, 0) elseif Value == "White" then trajectorycolor = Color3.new(1, 1, 1) elseif Value == "Black" then trajectorycolor = Color3.new(0, 0, 0) elseif Value == "Purple" then trajectorycolor = Color3.fromRGB(128, 0, 128) end end }) footballgroup:AddToggle("fpsbooster", { Text = "fps booster", Default = false, Callback = function(Value) tzts(Value) end }) local fpsgroup = shiiifooionknowtftonamets.misc:AddRightGroupbox("FPS Cap") local capFpsOn = false local fpsCapValue = 60 fpsgroup:AddToggle("capfps", { Text = "cap fps", Default = false, Callback = function(Value) capFpsOn = Value if Value then setfpscap(fpsCapValue) else setfpscap(0) end end }) fpsgroup:AddSlider("fpscapvalue", { Text = "fps value", Min = 0, Max = 240, Default = 60, Rounding = 0, Callback = function(Value) fpsCapValue = Value if capFpsOn then setfpscap(Value) end end }) local undergroundgroup = shiiifooionknowtftonamets.misc:AddLeftGroupbox("Underground") local ugtoggle = undergroundgroup:AddToggle("underground", { Text = "underground", Default = false, Callback = function(Value) local transparency = Value and 0.5 or 0 local model = wakspase.Models.Field.Grass for _, part in pairs(model:GetDescendants()) do if part:IsA("BasePart") then part.CanCollide = not Value part.Transparency = transparency end end local uggggggggdadda = wakspase:FindFirstChild("UndergroundPart") if Value then if not uggggggggdadda then local part = Instance.new("Part") part.Name = "UndergroundPart" part.Size = Vector3.new(500, 0.001, 500) part.CFrame = CFrame.new(10.3562937, -1.51527438, 30.4708614) part.Anchored = true part.CanCollide = true part.Parent = wakspase else uggggggggdadda.Size = Vector3.new(500, 0.001, 500) end else if uggggggggdadda then uggggggggdadda:Destroy() end local char = player456squidgam.Character if char and char:FindFirstChild("HumanoidRootPart") then local hrp = char.HumanoidRootPart local rayorigin = Vector3.new(hrp.Position.X, 100, hrp.Position.Z) local raydirection = Vector3.new(0, -200, 0) local raycastparams = RaycastParams.new() raycastparams.FilterType = Enum.RaycastFilterType.Exclude raycastparams.FilterDescendantsInstances = {char} local result = wakspase:Raycast(rayorigin, raydirection, raycastparams) if result then hrp.CFrame = CFrame.new(result.Position + Vector3.new(0, 5, 0)) else hrp.CFrame = CFrame.new(hrp.Position.X, 10, hrp.Position.Z) end end end end }) undergroundgroup:AddLabel("keybind"):AddKeyPicker("UGKey", { Default = "U", SyncToggleState = false, Mode = "Toggle", Text = "underground keybind", Callback = function(Value) if Value then ugtoggle:SetValue(not ugtoggle.Value) end end }) local menugroup = shiiifooionknowtftonamets["ui settings"]:AddLeftGroupbox("Menu") menugroup:AddLabel("menu bind"):AddKeyPicker("MenuKeybind", { Default = "LeftControl", NoUI = true, Text = "menu keybind" }) library.ToggleKeybind = options.MenuKeybind thememanager:SetLibrary(library) savemanager:SetLibrary(library) savemanager:SetIgnoreIndexes({"MenuKeybind"}) thememanager:SetFolder("EonHub") savemanager:SetFolder("EonHub/FF2") savemanager:BuildConfigSection(shiiifooionknowtftonamets["ui settings"]) thememanager:ApplyToTab(shiiifooionknowtftonamets["ui settings"]) savemanager:LoadAutoloadConfig() local lastAutoGuardToggle = 0 local lastSwitchGuardMode = 0 realshit.Heartbeat:Connect(function() if options.AutoGuardToggleKey and options.AutoGuardToggleKey:GetState() and tick() - lastAutoGuardToggle > 0.5 then lastAutoGuardToggle = tick() toggles.autoguard:SetValue(not toggles.autoguard.Value) end if options.SwitchGuardModeKey and options.SwitchGuardModeKey:GetState() and tick() - lastSwitchGuardMode > 0.5 then lastSwitchGuardMode = tick() local currentMode = options.guardmode.Value local newMode = currentMode == "pr" and "lockdown" or "pr" options.guardmode:SetValue(newMode) end end) task.spawn(function() while true do task.wait(0.1) local gamevalues = wakspase:FindFirstChild("GameValues") if gamevalues then local status = gamevalues:FindFirstChild("Status") local possessiontag = gamevalues:FindFirstChild("PossessionTag") if status and possessiontag and player456squidgam.Team then if status.Value == "PrePlay" and possessiontag.Value == player456squidgam.Team.Name then blahbibal.whahsksjsnsnsn = true if player456squidgam.Character and player456squidgam.Character:FindFirstChild("HumanoidRootPart") then blahbibal.bumbumbasakelhbumbum = player456squidgam.Character.HumanoidRootPart.CFrame end task.wait(9e9) blahbibal.whahsksjsnsnsn = false end end end end end) if player456squidgam.Character then freezeoncatch(player456squidgam.Character) njc(player456squidgam.Character) whenmoving(player456squidgam.Character) oc(player456squidgam.Character) rrrrrrrsizenugget(player456squidgam.Character) end player456squidgam.CharacterAdded:Connect(function(char) freezeoncatch(char) njc(char) whenmoving(char) oc(char) rrrrrrrsizenugget(char) end) for _, plr in ipairs(players:GetPlayers()) do if plr ~= players.LocalPlayer and plr.Character then nocollide(plr.Character) end plr.CharacterAdded:Connect(nocollide) end players.PlayerAdded:Connect(function(plr) plr.CharacterAdded:Connect(nocollide) end) realshit.Heartbeat:Connect(function() if not freezetechon or freezemode ~= "Before catch" then return end local character = player456squidgam.Character if not character then return end local hrp = character:FindFirstChild("HumanoidRootPart") if not hrp then return end if gotfb() then return end local ball, distance = findclosestball() if ball and distance <= beforerange and not bloodclatmibackside then bloodclatmibackside = true task.spawn(function() hrp.Anchored = true task.wait(freezeduration) hrp.Anchored = false end) elseif not ball or distance > beforerange then bloodclatmibackside = false end end) realshit.Heartbeat:Connect(function() if autoguardon then local targetChar = guardLocked and guardLockedTarget or sltcted if not targetChar then return end local targethrp = targetChar:FindFirstChild("HumanoidRootPart") local localchar = player456squidgam.Character local localhrp = localchar:FindFirstChild("HumanoidRootPart") local localhumanoid = localchar:FindFirstChild("Humanoid") if not targethrp or not localhrp or not localhumanoid then if guardhighlight then guardhighlight:Destroy() end guardhighlight = nil sltcted = nil return end local targetplayer = players:GetPlayerFromCharacter(targetChar) if not targetplayer or not player456squidgam.Team or targetplayer.Team == player456squidgam.Team then if guardhighlight then guardhighlight:Destroy() end guardhighlight = nil sltcted = nil return end local targetpos = targethrp.Position local localpos = localhrp.Position local targetvel = targethrp.Velocity local desiredpos if ggahshdhdhdh == "lockdown" then local offsetdirection if targetvel.Magnitude > 1 then offsetdirection = Vector3.new(targetvel.X, 0, targetvel.Z).Unit else offsetdirection = targethrp.CFrame.LookVector end desiredpos = targetpos - offsetdirection * 0 elseif ggahshdhdhdh == "pr" then local offsetdirection if targetvel.Magnitude > 1 then offsetdirection = Vector3.new(targetvel.X, 0, targetvel.Z).Unit else offsetdirection = targethrp.CFrame.LookVector end desiredpos = targetpos + offsetdirection * pryards end localhumanoid:MoveTo(desiredpos) end end) realshit.Heartbeat:Connect(function() if not autorushon then if besmetea then besmetea:Destroy() wmbamfatni:Destroy() beehonfoenemgravefoo:Destroy() besmetea = nil wmbamfatni = nil beehonfoenemgravefoo = nil end return end local character = player456squidgam.Character if not character or not character:FindFirstChild("Humanoid") then if besmetea then besmetea:Destroy() wmbamfatni:Destroy() beehonfoenemgravefoo:Destroy() besmetea = nil wmbamfatni = nil beehonfoenemgravefoo = nil end return end local okdhdjdd = thetriggathatholdingfb() if not okdhdjdd then plllldjskd = {} if besmetea then besmetea:Destroy() wmbamfatni:Destroy() beehonfoenemgravefoo:Destroy() besmetea = nil wmbamfatni = nil beehonfoenemgravefoo = nil end return end local hrp = okdhdjdd:FindFirstChild("HumanoidRootPart") if not hrp then return end table.insert(plllldjskd, { bbbbskkegsjsme = hrp.Position, todnsjjjjjjjj = os.clock(), kksnalll = hrp.Velocity }) while #plllldjskd > 0 and os.clock() - plllldjskd[1].todnsjjjjjjjj > autorushdelay + 0.5 do table.remove(plllldjskd, 1) end local dkdnhdmehemshkkkk = math.max(1, #plllldjskd - math.floor(autorushdelay / (1/60))) local xjbsnsndndns = plllldjskd[dkdnhdmehemshkkkk] if not xjbsnsndndns then if besmetea then besmetea:Destroy() wmbamfatni:Destroy() beehonfoenemgravefoo:Destroy() besmetea = nil wmbamfatni = nil beehonfoenemgravefoo = nil end return end local targetpos = xjbsnsndndns.bbbbskkegsjsme local dodnjdmxnekdnd = Vector3.new(xjbsnsndndns.kksnalll.X, 0, xjbsnsndndns.kksnalll.Z) local playerpos = character.HumanoidRootPart.Position local playerspeed = character.Humanoid.WalkSpeed local djekjdkdne = targetpos - playerpos local a = dodnjdmxnekdnd:Dot(dodnjdmxnekdnd) - playerspeed * playerspeed local b = 2 * djekjdkdne:Dot(dodnjdmxnekdnd) local c = djekjdkdne:Dot(djekjdkdne) local discriminant = b * b - 4 * a * c local todnsjjjjjjjj if discriminant >= 0 then local root1 = (-b + math.sqrt(discriminant)) / (2 * a) local root2 = (-b - math.sqrt(discriminant)) / (2 * a) todnsjjjjjjjj = math.huge if root1 > 0 then todnsjjjjjjjj = root1 end if root2 > 0 and root2 < todnsjjjjjjjj then todnsjjjjjjjj = root2 end if todnsjjjjjjjj == math.huge then todnsjjjjjjjj = djekjdkdne.Magnitude / playerspeed end else todnsjjjjjjjj = djekjdkdne.Magnitude / playerspeed end local djemdjmsndnsjendhske = targetpos + dodnjdmxnekdnd * todnsjjjjjjjj if autorushpredict and character:FindFirstChild("Head") then local djkdheudyyyyyysnnse = character.Head.Position if not besmetea then wmbamfatni = Instance.new("Attachment") beehonfoenemgravefoo = Instance.new("Attachment") besmetea = Instance.new("Beam") besmetea.Color = ColorSequence.new(Color3.new(1, 0, 0)) besmetea.Transparency = NumberSequence.new(0) besmetea.Width0 = 0.5 besmetea.Width1 = 0.5 besmetea.Segments = 100 besmetea.Attachment0 = wmbamfatni besmetea.Attachment1 = beehonfoenemgravefoo besmetea.Parent = wakspase.Terrain wmbamfatni.Parent = wakspase.Terrain beehonfoenemgravefoo.Parent = wakspase.Terrain end wmbamfatni.CFrame = CFrame.new(djkdheudyyyyyysnnse) beehonfoenemgravefoo.CFrame = CFrame.new(djemdjmsndnsjendhske) else if besmetea then besmetea:Destroy() wmbamfatni:Destroy() beehonfoenemgravefoo:Destroy() besmetea = nil wmbamfatni = nil beehonfoenemgravefoo = nil end end character.Humanoid:MoveTo(djemdjmsndnsjendhske) end) realshit.Heartbeat:Connect(function() if not antiblokon or not player456squidgam.Character then return end local torso = player456squidgam.Character:FindFirstChild("Torso") or player456squidgam.Character:FindFirstChild("UpperTorso") if torso then for _,v in ipairs(torso:GetChildren()) do if v.Name == "FFmover" then v:Destroy() end end end end) task.spawn(function() while task.wait(0.1) do if not autocatchon then continue end local ball, distance = findclosestball() if ball and distance <= catchdistance then local viewportsize = wakspase.CurrentCamera.ViewportSize local centerx = viewportsize.X / 2 local centery = viewportsize.Y / 2 vim:SendMouseButtonEvent(centerx, centery, 0, true, game, 1) task.wait(0.01) vim:SendMouseButtonEvent(centerx, centery, 0, false, game, 1) end end end) task.spawn(function() while task.wait() do if not cframespeedon then continue end local character = player456squidgam.Character if not character then continue end local hrp = character:FindFirstChild("HumanoidRootPart") if not hrp then continue end local humanoid = character:FindFirstChild("Humanoid") if not humanoid then continue end local movedirection = humanoid.MoveDirection hrp.CFrame = hrp.CFrame + movedirection * cframespeed end end) task.spawn(function() while task.wait(0.1) do if not pullvector then continue end local character = player456squidgam.Character if not character then continue end local humanoidrootpart = character:FindFirstChild("HumanoidRootPart") if not humanoidrootpart then continue end for _, ball in pairs(wakspase:GetChildren()) do if not ball.Name:lower():match("football") or not ball:IsA("BasePart") or ball.Anchored then continue end if bigblackbombaclaatballs[ball] then continue end local distance = (humanoidrootpart.Position - ball.Position).Magnitude if distance > pullvectordistance then continue end local direction = (ball.Position - humanoidrootpart.Position).Unit if pullvectortype == "Teleport" and not blahbibal.whahsksjsnsnsn then bigblackbombaclaatballs[ball] = true local teleportdistance = 10 + ((pullvectorpower - 1) * 5) humanoidrootpart.CFrame = humanoidrootpart.CFrame + (direction * teleportdistance) elseif pullvectortype == "Velocity" then humanoidrootpart.AssemblyLinearVelocity = direction * pullvectorpower * 25 end end end end) task.spawn(function() while task.wait() do local character = player456squidgam.Character if not character then continue end local nettmadets = character:FindFirstChild("BlockPart") if not nettmadets then continue end if fatminsksndjd then nettmadets.Size = Vector3.new(djdnshheilppeisllak, djdnshheilppeisllak, djdnshheilppeisllak) nettmadets.Transparency = 1 else nettmadets.Size = Vector3.new(0.75, 5, 1.5) nettmadets.Transparency = 1 end end end) local oldnamecall oldnamecall = hookmetamethod(game, "__namecall", function(self, ...) local method = getnamecallmethod() local args = {...} if args[1] == "Clicked" and qbaimboton then return oldnamecall(self, "Clicked", player456squidgam.Character.HumanoidRootPart.Position, player456squidgam.Character.HumanoidRootPart.Position + baskelehbambam.direction * 10000, (game.PlaceId == 8206123457 and baskelehbambam.power) or 1, baskelehbambam.power) end return oldnamecall(self, ...) end) realshit.Heartbeat:Connect(function() if not qbaimboton then sjzmbdjsbdienxirxnhr = nil whotheqbalocksontoyuhfeelme = nil highlight.Parent = nil mdmdmdmememjxakm.Visible = false shabvsvsvvvavba.Visible = false dkdnrjdmdjenndsj.Visible = false if trajectorybeam then trajectorybeam:Destroy() end if trajectoryattachment0 then trajectoryattachment0:Destroy() end if trajectoryattachment1 then trajectoryattachment1:Destroy() end if trajectoryendpart then trajectoryendpart:Destroy() end trajectorybeam = nil trajectoryattachment0 = nil trajectoryattachment1 = nil trajectoryendpart = nil return end if locked and whotheqbalocksontoyuhfeelme then if not (whotheqbalocksontoyuhfeelme and whotheqbalocksontoyuhfeelme.Parent and whotheqbalocksontoyuhfeelme:FindFirstChild("HumanoidRootPart")) then locked = false whotheqbalocksontoyuhfeelme = nil lockbuttontext.Text = "Unlocked" lockbuttonstroke.Color = Color3.fromRGB(0, 255, 0) lockbuttontext.TextColor3 = Color3.fromRGB(0, 255, 0) else sjzmbdjsbdienxirxnhr = whotheqbalocksontoyuhfeelme end else sjzmbdjsbdienxirxnhr = ffffnfnjdndrmdjkdtgey() end shabvsvsvvvavba.Visible = lockbuttonon and gotfb() dkdnrjdmdjenndsj.Visible = switchmodebuttonon and gotfb() mdmdmdmememjxakm.Visible = showui and gotfb() if sjzmbdjsbdienxirxnhr and player456squidgam.Character and player456squidgam.Character:FindFirstChild("Head") and sjzmbdjsbdienxirxnhr:FindFirstChild("HumanoidRootPart") and gotfb() then highlight.OutlineColor = locked and Color3.fromRGB(0, 100, 0) or Color3.fromRGB(0, 255, 0) highlight.FillColor = locked and Color3.fromRGB(0, 100, 0) or Color3.fromRGB(0, 255, 0) local g, leaddistance = Vector3.new(0, -28, 0), typlead[pizztype] local head = player456squidgam.Character.Head local djkdheudyyyyyysnnse = head.Position local receivervel = sjzmbdjsbdienxirxnhr.HumanoidRootPart.Velocity local horizontalvel = Vector3.new(receivervel.X, 0, receivervel.Z) local speed = horizontalvel.Magnitude local movedirection = horizontalvel.Unit if speed < 1 then movedirection = (sjzmbdjsbdienxirxnhr.HumanoidRootPart.Position - djkdheudyyyyyysnnse).Unit end local targetposition = sjzmbdjsbdienxirxnhr.HumanoidRootPart.Position + horizontalvel * 1.2 + movedirection * leaddistance + Vector3.new(0, 5, 0) local horizontaldistance = (djkdheudyyyyyysnnse - targetposition).Magnitude if horizontaldistance < 1 then baskelehbambam.direction = Vector3.new(0, 0, 0) baskelehbambam.power = 0 highlight.Parent = nil if trajectorybeam then trajectorybeam:Destroy() end if trajectoryattachment0 then trajectoryattachment0:Destroy() end if trajectoryattachment1 then trajectoryattachment1:Destroy() end if trajectoryendpart then trajectoryendpart:Destroy() end trajectorybeam = nil trajectoryattachment0 = nil trajectoryattachment1 = nil trajectoryendpart = nil return end local desiredheight if pizztype == "Bullet" then desiredheight = ((horizontaldistance ^ 2) * 0.0001) + ((horizontaldistance * 0.0001) / 3) + ((horizontaldistance / 13)) - 0.75 else desiredheight = ((horizontaldistance ^ 2) * 0.0013) + ((horizontaldistance * 0.0013) / 2) + ((horizontaldistance / 10) + 1) + 2 end local todnsjjjjjjjj = (function() local xmeters = desiredheight * 4 local a, b, c = 0.5 * g.Y, targetposition.Y - djkdheudyyyyyysnnse.Y, xmeters - djkdheudyyyyyysnnse.Y local discriminant = b * b - 4 * a * c return discriminant >= 0 and math.max((-b + math.sqrt(discriminant)) / (2 * a), (-b - math.sqrt(discriminant)) / (2 * a)) or 0.1 end)() local to = sjzmbdjsbdienxirxnhr.HumanoidRootPart.Position + horizontalvel * todnsjjjjjjjj + movedirection * leaddistance + Vector3.new(0, 5, 0) local v0 if customangleon then v0 = trackvpnmademethisinjanuaryandijustimprovedit(djkdheudyyyyyysnnse, to, g, blackmimad) if not v0 then v0 = (to - djkdheudyyyyyysnnse - 0.5 * g * todnsjjjjjjjj * todnsjjjjjjjj) / todnsjjjjjjjj end else if pizztype == "Bullet" then v0 = trackvpnmademethisinjanuaryandijustimprovedit(djkdheudyyyyyysnnse, to, g, 15) if not v0 then v0 = (to - djkdheudyyyyyysnnse - 0.5 * g * todnsjjjjjjjj * todnsjjjjjjjj) / todnsjjjjjjjj end else v0 = (to - djkdheudyyyyyysnnse - 0.5 * g * todnsjjjjjjjj * todnsjjjjjjjj) / todnsjjjjjjjj end end local power = math.round(v0.Y / ((djkdheudyyyyyysnnse + v0) - djkdheudyyyyyysnnse).Unit.Y) if power < 0 then power = 0 elseif power > 95 then power = 95 end local angle = eonangle(v0, horizontaldistance) if customangleon then baskelehbambam.angle = blackmimad else baskelehbambam.angle = angle end baskelehbambam.direction = ((djkdheudyyyyyysnnse + v0) - djkdheudyyyyyysnnse).Unit baskelehbambam.power = power highlight.Parent = sjzmbdjsbdienxirxnhr throwtypelabel.Text = pizztype powerlabel.Text = tostring(power) targetlabel.Text = sjzmbdjsbdienxirxnhr.Name airtimelabel.Text = string.format("%.2fs", todnsjjjjjjjj) anglelabel.Text = tostring(math.floor(baskelehbambam.angle)) babsbsbabakbana.Text = isdisbihinterceptable(djkdheudyyyyyysnnse, v0, todnsjjjjjjjj, g, receivervel) and "Yes" or "No" if trajectoryon and qbaimboton and gotfb() then if not trajectorybeam then trajectorybeam = Instance.new("Beam") trajectoryattachment0 = Instance.new("Attachment") trajectoryattachment1 = Instance.new("Attachment") trajectorybeam.Color = ColorSequence.new(trajectorycolor) trajectorybeam.Transparency = NumberSequence.new({ NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.7, 0), NumberSequenceKeypoint.new(1, 0.9) }) trajectorybeam.Name = "Trajectory" trajectorybeam.Parent = wakspase.Terrain trajectorybeam.Segments = 1750 trajectoryattachment0.Parent = wakspase.Terrain trajectoryattachment1.Parent = wakspase.Terrain trajectorybeam.Attachment0 = trajectoryattachment0 trajectorybeam.Attachment1 = trajectoryattachment1 trajectorybeam.Width0 = 0.8 trajectorybeam.Width1 = 0.8 trajectoryendpart = Instance.new("Part") trajectoryendpart.Shape = Enum.PartType.Ball trajectoryendpart.Size = Vector3.new(4, 4, 4) trajectoryendpart.Anchored = true trajectoryendpart.CanCollide = false trajectoryendpart.Transparency = 0.5 trajectoryendpart.Material = Enum.Material.ForceField trajectoryendpart.Color = trajectorycolor trajectoryendpart.Parent = wakspase.Terrain end local c0, c1, cf1, cf2 = beamProjectile(Vector3.new(0, -28, 0), v0, djkdheudyyyyyysnnse, todnsjjjjjjjj) trajectorybeam.CurveSize0 = c0 trajectorybeam.CurveSize1 = c1 trajectoryattachment0.CFrame = trajectoryattachment0.Parent.CFrame:Inverse() * cf1 trajectoryattachment1.CFrame = trajectoryattachment1.Parent.CFrame:Inverse() * cf2 trajectoryendpart.Position = cf2.Position elseif not trajectoryon and trajectorybeam then trajectorybeam:Destroy() trajectoryattachment0:Destroy() trajectoryattachment1:Destroy() trajectoryendpart:Destroy() trajectorybeam = nil trajectoryattachment0 = nil trajectoryattachment1 = nil trajectoryendpart = nil end else highlight.Parent = nil if trajectorybeam then trajectorybeam:Destroy() end if trajectoryattachment0 then trajectoryattachment0:Destroy() end if trajectoryattachment1 then trajectoryattachment1:Destroy() end if trajectoryendpart then trajectoryendpart:Destroy() end trajectorybeam = nil trajectoryattachment0 = nil trajectoryattachment1 = nil trajectoryendpart = nil end end) realshit.Heartbeat:Connect(function(deltatime) if not magson then return end local cnp = tick() if magsdelayon and (cnp - lmgg) < magsdelay then return end local magthatbihfoo = getfutbal() if magthatbihfoo then local closestcatchpart = catch(magthatbihfoo) if closestcatchpart then firetouchinterest(closestcatchpart, magthatbihfoo, 0) task.wait() firetouchinterest(closestcatchpart, magthatbihfoo, 1) end end if magsdelayon then lmgg = cnp end end) local finishline = wakspase.Models:FindFirstChild("LockerRoomA") and wakspase.Models.LockerRoomA:FindFirstChild("FinishLine") or Instance.new('Part') finishline:GetPropertyChangedSignal("CFrame"):Connect(function() if autocaptainon and finishline.Position.Y > 0 then player456squidgam.Character.HumanoidRootPart.CFrame = finishline.CFrame + Vector3.new(0, 2, 0) end end) player456squidgam.PlayerGui.ChildAdded:Connect(function(child) if child.Name == "KickerGui" and autokicker.Value then local cursor = child:FindFirstChild("Cursor", true) if autokickerrandom.Value then autokickerpower.Value = math.random(75, 100) autokickeraccuracy.Value = math.random(75, 100) end repeat task.wait(0.01) until cursor.Position.Y.Scale < 0.01 + ((100 - autokickerpower.Value) * 0.012) vim:SendMouseButtonEvent(mickeymous.X, mickeymous.Y, 0, true, game, 1) task.wait(0.01) vim:SendMouseButtonEvent(mickeymous.X, mickeymous.Y, 0, false, game, 1) repeat task.wait(0.01) until cursor.Position.Y.Scale > 0.9 - ((100 - autokickeraccuracy.Value) * 0.001) vim:SendMouseButtonEvent(mickeymous.X, mickeymous.Y, 0, true, game, 1) task.wait(0.01) vim:SendMouseButtonEvent(mickeymous.X, mickeymous.Y, 0, false, game, 1) end end) userinputservice.InputBegan:Connect(function(input, gameprocessed) if autoguardon and not gameprocessed then if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then local clickposition if input.UserInputType == Enum.UserInputType.MouseButton1 then clickposition = mickeymous.Hit.p elseif input.UserInputType == Enum.UserInputType.Touch then local touchpos = input.Position local ray = wakspase.CurrentCamera:ScreenPointToRay(touchpos.X, touchpos.Y) local result = wakspase:Raycast(ray.Origin, ray.Direction * 1000) if result then clickposition = result.Position else clickposition = ray.Origin + ray.Direction * 1000 end end if clickposition then local sjzmbdjsbdienxirxnhr = bbbsiekdndn(clickposition, 20) if sjzmbdjsbdienxirxnhr then if guardhighlight then guardhighlight:Destroy() guardhighlight = nil end sltcted = sjzmbdjsbdienxirxnhr guardhighlight = Instance.new("Highlight") guardhighlight.FillColor = Color3.fromRGB(0, 150, 255) guardhighlight.OutlineColor = Color3.fromRGB(0, 150, 255) guardhighlight.Parent = sjzmbdjsbdienxirxnhr end end end end if input.UserInputType == Enum.UserInputType.Gamepad1 and not gameprocessed then if input.KeyCode == Enum.KeyCode.DPadDown then if qbaimboton and gotfb() then locked = not locked if locked then whotheqbalocksontoyuhfeelme = sjzmbdjsbdienxirxnhr else whotheqbalocksontoyuhfeelme = nil end end elseif input.KeyCode == Enum.KeyCode.DPadUp then if qbaimboton and gotfb() then pizztype = ggggggggghswidahbifoo[pizztype] vvagaqeqrtwtwt.Text = pizztype end end end if gameprocessed then return end if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then if not clicktackleon then return end local slveesor = findclosestsleveesor(clicktacklerange) if slveesor and slveesor:FindFirstChild("HumanoidRootPart") then local character = player456squidgam.Character if not character then return end local hrp = character:FindFirstChild("HumanoidRootPart") if not hrp then return end hrp.CFrame = slveesor.HumanoidRootPart.CFrame end end end) userinputservice.InputChanged:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement and autoguardon then if shsnehxniehdksjed and hxkdndbnzehz then shsnehxniehdksjed:Destroy() shsnehxniehdksjed = nil end local mousepos = mickeymous.Hit.p local sjzmbdjsbdienxirxnhr = bbbsiekdndn(mousepos, 20) if sjzmbdjsbdienxirxnhr and sjzmbdjsbdienxirxnhr ~= hxkdndbnzehz then shsnehxniehdksjed = Instance.new("Highlight") shsnehxniehdksjed.FillColor = Color3.fromRGB(255, 200, 0) shsnehxniehdksjed.OutlineColor = Color3.fromRGB(255, 200, 0) shsnehxniehdksjed.Parent = sjzmbdjsbdienxirxnhr hxkdndbnzehz = sjzmbdjsbdienxirxnhr end end end) wakspase.ChildAdded:Connect(function(child) if child.Name:lower():match("football") and magson and showhitboxon and child:IsA("BasePart") then hitboxx(child) end end) library:OnUnload(function() if highlight and highlight.Parent then highlight:Destroy() end if mmdbdndjxhdidjdkd then mmdbdndjxhdidjdkd:Destroy() end for _, data in pairs(hitboxes) do if data.part and data.part.Parent then data.part:Destroy() end end for _, connection in pairs(njcconnections) do if connection then connection:Disconnect() end end if eventconnection then eventconnection:Disconnect() eventconnection = nil end if trajectorybeam and trajectorybeam.Parent then trajectorybeam:Destroy() end if trajectoryattachment0 and trajectoryattachment0.Parent then trajectoryattachment0:Destroy() end if trajectoryattachment1 and trajectoryattachment1.Parent then trajectoryattachment1:Destroy() end if trajectoryendpart and trajectoryendpart.Parent then trajectoryendpart:Destroy() end if besmetea and besmetea.Parent then besmetea:Destroy() wmbamfatni:Destroy() beehonfoenemgravefoo:Destroy() end for _, highlight in pairs(footballHighlights) do highlight:Destroy() end if highlightConnection then highlightConnection:Disconnect() end local character = player456squidgam.Character if character then local nettmadets = character:FindFirstChild("BlockPart") if nettmadets then nettmadets.Size = Vector3.new(0.75, 5, 1.5) nettmadets.Transparency = 1 end if catchresizeon then local catchleft = character:FindFirstChild("CatchLeft") local catchright = character:FindFirstChild("CatchRight") if catchleft then catchleft.Size = Vector3.new(0.75, 5, 1.5) end if catchright then catchright.Size = Vector3.new(0.75, 5, 1.5) end end end end)